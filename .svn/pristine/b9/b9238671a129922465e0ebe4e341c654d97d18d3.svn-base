//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Web.ApplicationServices
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfilePropertyMetadata", Namespace="http://schemas.datacontract.org/2004/07/System.Web.ApplicationServices")]
    public partial class ProfilePropertyMetadata : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool AllowAnonymousAccessField;
        
        private string DefaultValueField;
        
        private bool IsReadOnlyField;
        
        private string PropertyNameField;
        
        private int SerializeAsField;
        
        private string TypeNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowAnonymousAccess
        {
            get
            {
                return this.AllowAnonymousAccessField;
            }
            set
            {
                this.AllowAnonymousAccessField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultValue
        {
            get
            {
                return this.DefaultValueField;
            }
            set
            {
                this.DefaultValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly
        {
            get
            {
                return this.IsReadOnlyField;
            }
            set
            {
                this.IsReadOnlyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName
        {
            get
            {
                return this.PropertyNameField;
            }
            set
            {
                this.PropertyNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerializeAs
        {
            get
            {
                return this.SerializeAsField;
            }
            set
            {
                this.SerializeAsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName
        {
            get
            {
                return this.TypeNameField;
            }
            set
            {
                this.TypeNameField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://asp.net/ApplicationServices/v200", ConfigurationName="ProfileService")]
public interface ProfileService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://asp.net/ApplicationServices/v200/ProfileService/GetPropertiesForCurrentUse" +
        "r", ReplyAction="http://asp.net/ApplicationServices/v200/ProfileService/GetPropertiesForCurrentUse" +
        "rResponse")]
    System.Collections.Generic.Dictionary<string, object> GetPropertiesForCurrentUser(string[] properties, bool authenticatedUserOnly);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://asp.net/ApplicationServices/v200/ProfileService/GetAllPropertiesForCurrent" +
        "User", ReplyAction="http://asp.net/ApplicationServices/v200/ProfileService/GetAllPropertiesForCurrent" +
        "UserResponse")]
    System.Collections.Generic.Dictionary<string, object> GetAllPropertiesForCurrentUser(bool authenticatedUserOnly);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://asp.net/ApplicationServices/v200/ProfileService/SetPropertiesForCurrentUse" +
        "r", ReplyAction="http://asp.net/ApplicationServices/v200/ProfileService/SetPropertiesForCurrentUse" +
        "rResponse")]
    string[] SetPropertiesForCurrentUser(System.Collections.Generic.Dictionary<string, object> values, bool authenticatedUserOnly);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://asp.net/ApplicationServices/v200/ProfileService/GetPropertiesMetadata", ReplyAction="http://asp.net/ApplicationServices/v200/ProfileService/GetPropertiesMetadataRespo" +
        "nse")]
    System.Web.ApplicationServices.ProfilePropertyMetadata[] GetPropertiesMetadata();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface ProfileServiceChannel : ProfileService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class ProfileServiceClient : System.ServiceModel.ClientBase<ProfileService>, ProfileService
{
    
    public ProfileServiceClient()
    {
    }
    
    public ProfileServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ProfileServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ProfileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ProfileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Collections.Generic.Dictionary<string, object> GetPropertiesForCurrentUser(string[] properties, bool authenticatedUserOnly)
    {
        return base.Channel.GetPropertiesForCurrentUser(properties, authenticatedUserOnly);
    }
    
    public System.Collections.Generic.Dictionary<string, object> GetAllPropertiesForCurrentUser(bool authenticatedUserOnly)
    {
        return base.Channel.GetAllPropertiesForCurrentUser(authenticatedUserOnly);
    }
    
    public string[] SetPropertiesForCurrentUser(System.Collections.Generic.Dictionary<string, object> values, bool authenticatedUserOnly)
    {
        return base.Channel.SetPropertiesForCurrentUser(values, authenticatedUserOnly);
    }
    
    public System.Web.ApplicationServices.ProfilePropertyMetadata[] GetPropertiesMetadata()
    {
        return base.Channel.GetPropertiesMetadata();
    }
}
